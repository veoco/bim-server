name: Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g. v1.0.0)'
        required: true
      prerelease:
        description: 'Mark as prerelease'
        required: false
        default: 'false'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-musl
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.target }}

      - name: Install cross
        run: cargo install cross

      - name: Build ${{ matrix.target }}
        run: |
          mkdir -p ./build/release
          cross build --target ${{ matrix.target }} --release
          cp ./target/${{ matrix.target }}/release/bim-server ./build/release/bim-server

      - name: UPX
        uses: crazy-max/ghaction-upx@v2
        with:
          files: ./build/release/bim-server
          args: --best --lzma

      - name: Package
        run: |
          cd ./build/release
          tar -czf bim-server-${{ matrix.target }}.tar.gz bim-server
          mv bim-server bim-server-${{ matrix.target }}

      - uses: actions/upload-artifact@v4
        with:
          name: bim-server-${{ matrix.target }}
          path: build/release/*

  build-windows:
    runs-on: windows-latest
    env:
      RUST_BACKTRACE: full
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
      - name: Build
        run: |
          cargo build --release
          mkdir -p ./build/release
          cp ./target/release/bim-server.exe ./build/release/bim-server.exe
      - name: Package
        run: |
          cd ./build/release
          powershell -command "Compress-Archive -Path bim-server.exe -DestinationPath bim-server-windows.zip"
      - uses: actions/upload-artifact@v4
        with:
          name: bim-server-windows
          path: build/release/*

  build-macos:
    runs-on: macos-latest
    env:
      RUST_BACKTRACE: full
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
      - name: Build
        run: |
          cargo build --release
          mkdir -p ./build/release
          cp ./target/release/bim-server ./build/release/bim-server
      - name: Package
        run: |
          cd ./build/release
          tar -czf bim-server-macos.tar.gz bim-server
          mv bim-server bim-server-macos
      - uses: actions/upload-artifact@v4
        with:
          name: bim-server-macos
          path: build/release/*

  release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows, build-macos]
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.tag }}
          name: ${{ github.event.inputs.tag }}
          draft: false
          prerelease: ${{ github.event.inputs.prerelease }}
          generate_release_notes: true
          files: dist/**/*
